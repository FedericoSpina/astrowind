---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  tagline,
  image,
  id,
} = Astro.props;

const hasImage = image && typeof image === 'object';
---

<section id={id || undefined} class="relative w-full min-h-screen flex items-center justify-center text-white">
  <!-- Background Image -->
  <div
    class="absolute inset-0 h-full w-full overflow-hidden"
    aria-hidden="true"
  >
    {hasImage ? (
      <Image
        class="absolute inset-0 object-cover w-full h-full"
        widths={[400, 768, 1024, 2048]}
        sizes="100vw"
        loading="eager"
        {...image}
      />
    ) : (
      <div class="w-full h-full bg-gray-800"></div>
    )}
    <!-- Gradient overlay -->
    <div class="absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80"></div>
  </div>

  <!-- Foreground Content -->
  <div class="relative z-10 max-w-4xl px-6 text-center">
    {tagline && (
      <p
        class="text-sm font-semibold tracking-widest uppercase text-secondary dark:text-blue-200 mb-4"
        set:html={tagline}
      />
    )}
    {title && (
      <h1
        class="text-4xl sm:text-5xl md:text-6xl font-extrabold tracking-tight mb-6"
        set:html={title}
      />
    )}
    {subtitle && (
      <p
        class="text-lg sm:text-xl md:text-2xl text-gray-300 mb-8"
        set:html={subtitle}
      />
    )}
    {actions && (
      <div class="flex flex-wrap gap-4 justify-center">
        {Array.isArray(actions) ? (
          actions.map((action) => (
            <Button {...(action || {})} class="w-full sm:w-auto" />
          ))
        ) : (
          <Fragment set:html={actions} />
        )}
      </div>
    )}
    {content && <Fragment set:html={content} />}
  </div>
</section>
